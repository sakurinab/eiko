//  _____  _                 _____              _                           
// /  __ \| |               /  ___|            | |                          
// | /  \/| |  __ _  _ __   \ `--.  _   _  ___ | |_  ___  _ __ ___          
// | |    | | / _` || '_ \   `--. \| | | |/ __|| __|/ _ \| '_ ` _ \         
// | \__/\| || (_| || | | | /\__/ /| |_| |\__ \| |_|  __/| | | | | |        
//  \____/|_| \__,_||_| |_| \____/  \__, ||___/ \__|\___||_| |_| |_|        
//                                   __/ |                                  
// ______          _   __       _   |___/                 _                 
// | ___ \        | | / /      (_)     | |               | |                
// | |_/ / _   _  | |/ /  _ __  _  ___ | |_  ___   _ __  | |__    ___  _ __ 
// | ___ \| | | | |    \ | '__|| |/ __|| __|/ _ \ | '_ \ | '_ \  / _ \| '__|
// | |_/ /| |_| | | |\  \| |   | |\__ \| |_| (_) || |_) || | | ||  __/| |   
// \____/  \__, | \_| \_/|_|   |_||___/ \__|\___/ | .__/ |_| |_| \___||_|   
//          __/ |                                 | |                       
//         |___/      _____       _____           |_|                       
//         /  |      |____ |     |  _  |                                    
// __   __ `| |          / /     | |/' |                                    
// \ \ / /  | |          \ \     |  /| |                                    
//  \ V /  _| |_  _  .___/ /  _  \ |_/ /                                    
//   \_/   \___/ (_) \____/  (_)  \___/                                     
//
const Discord = require('discord.js');
const fs = require('fs');
const isImageURL = require('image-url-validator').default;
const config = require("../botconfig.json");
//mongoose
const mongoose = require('mongoose');
const reclanModel = require('../schemas/reclanSchema.js');
const profileModel = require('../schemas/profileSchema.js');
const deposeModel = require('../schemas/clanDepositSchema.js');
const actionModel = require('../schemas/actionSchema.js');
//TEMPSHIT
const reclanCategory = "829371033785991210";
const clanDefaultDesc = "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞..."
//Multipliers
const xplvlmult = 4320;
//Prices
const clanPrice = 50000;
const deposeCooldown = 43200000; //ms
const clanDepositLimit = 15000;
const colorPrice = 5000;
const descriptionPrice = 5000;
const symbolPrice = 15000;
const bannerPrice = 30000;
const renamePrice = 10000;
const bombPrice = 800;
const bombCooldown = 1000 * 60 * 60 * 4;
const robPrice = 300;
const robCooldown = 1000 * 60 * 60 * 2;
//perks start prices
const slotsPrice = 60000;
const levelMultiplyPrice = 70000;
const coinMultiplyPrice = 100000;

function isHexColor(h) {
	if (h.match(/^#([0-9A-F]{3}){1,2}$/i) || h.match(/^#[0-9A-F]{6}$/i)) return true
	return false;
}

module.exports.run = async (bot, message, args) => {
	try {

		let author = message.author;
		let userSilver = profileData.silverCoins;
		let target = message.guild.member(message.mentions.users.first() || message.guild.members.cache.get(args[1]));

		profileData = await profileModel.findOne({
			userID: author.id,
		})
		let userClan = profileData.clan;

		let reclanData = [];

		let coinBoost = coinMultiplyPrice;
		let lvlBoost = levelMultiplyPrice;
		let slotsBoost = slotsPrice;
		let membersAmount = 0;

		if (userClan != -1) {
			reclanData = await reclanModel.findOne({
				clanID: userClan,
			});
			//perks multiplied prices
			coinBoost = reclanData.coinMultiply * coinMultiplyPrice;
			lvlBoost = reclanData.lvlMultiply * levelMultiplyPrice;
			slotsBoost = Math.floor(reclanData.slots / 10) * slotsPrice;

			membersAmount = reclanData.members.length + reclanData.officers.length;
		}

		//INFO

		let systemInfo = new Discord.MessageEmbed()
			.setColor(`${config.defaultColor}`)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –°–∏—Å—Ç–µ–º–∞‚óû")
			.setDescription(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –∫–ª–∞–Ω–æ–≤:`)
			.addField(`–ê–≤—Ç–æ—Ä: `, '```' + `Kristopher` + '```', inline = true)
			.addField(`–í–µ—Ä—Å–∏—è: `, '```' + `1.3.0` + '```', inline = true)
			.addField(`–û–±–Ω–æ–≤–ª–µ–Ω–æ: `, '```' + `16.06.2021` + '```', inline = true)
			.addField(`–°–µ—Ä–≤–µ—Ä: `, '```' + `Teiko.` + '```', inline = true)
			.setFooter(`¬© Teiko. üçÉ by. bulokys.`)
			.setTimestamp();

		//–≠–º–±–µ–¥—ã
		let invalidName = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–ò–º—è –∫–ª–∞–Ω–∞ —É–∫–∞–∑–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ.\n–ò–º—è –∫–ª–∞–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 3 –∏–ª–∏ –±–æ–ª—å—à–µ 48 —Å–∏–º–≤–æ–ª–æ–≤.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let youAreInClan = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –∫–ª–∞–Ω - –ø–æ–∫–∏–Ω—å—Ç–µ —Ç–µ–∫—É—â–∏–π.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let cancel = new Discord.MessageEmbed()
			.setColor(config.defaultColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
			.setDescription(`–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let youAreNotInClan = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let clanIsUnderAttack = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ, –ø–æ–∫–∞ –í–∞—à –∫–ª–∞–Ω –∞—Ç–∞–∫—É—é—Ç.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let noOwnClan = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∫–ª–∞–Ω–∞.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let noPermissions = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∏–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–æ–º –∫–ª–∞–Ω–∞.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let urself = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –Ω–∞ —Å–µ–±–µ.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let noTarget = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let userInClan = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–ª–∞–Ω–µ.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let noSlots = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–í –∫–ª–∞–Ω–µ –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let userNotInYourClan = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –í–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let youCantKickOfficer = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å –æ—Ñ–∏—Ü–µ—Ä–∞ –∫–ª–∞–Ω–∞.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let youCantLeaveYourClan = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å *—Å–≤–æ–π* –∫–ª–∞–Ω. –í–∞–º –Ω—É–∂–Ω–æ *—É–¥–∞–ª–∏—Ç—å* –µ–≥–æ –∏–ª–∏ *–ø–µ—Ä–µ–¥–∞—Ç—å* –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–ª–∞–Ω–∞.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let errorCoins = new Discord.MessageEmbed()
			.setColor(config.errColor)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–µ—Ä–µ–±—Ä–∞.\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${userSilver} ${config.silverCoin}`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let invalidHex = new Discord.MessageEmbed()
			.setColor(`${config.errColor}`)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω —Ü–≤–µ—Ç.\n–ü—Ä–∏–º–µ—Ä —Ü–≤–µ—Ç–∞: \`#5b2076\``)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let noClanBalance = new Discord.MessageEmbed()
			.setColor(`${config.errColor}`)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–ù–∞ –±–∞–ª–∞–Ω—Å–µ –∫–ª–∞–Ω–∞ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥.\n–ë–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞: ${reclanData.balance}`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let youCantSetBannerNow = new Discord.MessageEmbed()
			.setColor(`${config.errColor}`)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–ë–∞–Ω–Ω–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Å–æ **–≤—Ç–æ—Ä–æ–≥–æ** —É—Ä–æ–≤–Ω—è –∫–ª–∞–Ω–∞.\n–£—Ä–æ–≤–µ–Ω—å –∫–ª–∞–Ω–∞: **${reclanData.level}**`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let youCantUpgradeClan = new Discord.MessageEmbed()
			.setColor(`${config.errColor}`)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–£–ª—É—á—à–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã —Å **—Ç—Ä–µ—Ç—å–µ–≥–æ** —É—Ä–æ–≤–Ω—è –∫–ª–∞–Ω–∞.\n–£—Ä–æ–≤–µ–Ω—å –∫–ª–∞–Ω–∞: **${reclanData.level}**`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let youHaveAMaxAmmountOfSlots = new Discord.MessageEmbed()
			.setColor(`${config.errColor}`)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–£ –í–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤ –≤ –∫–ª–∞–Ω–µ.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let youCantAttackYourClan = new Discord.MessageEmbed()
			.setColor(`${config.errColor}`)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∞—Ç–∞–∫–æ–≤–∞—Ç—å —Å–≤–æ–π –∫–ª–∞–Ω.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		let youForgotToSpecifyID = new Discord.MessageEmbed()
			.setColor(`${config.errColor}`)
			.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
			.setDescription(`–í—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å ID –∫–ª–∞–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∞—Ç–∞–∫–æ–≤–∞—Ç—å.`)
			.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
			.setTimestamp();

		if (!args[0]) {
			if (userClan == -1) return message.channel.send(youAreNotInClan);

			let clanColor = message.guild.roles.cache.get(reclanData.roleID).color;

			let dateStamp = new Date(reclanData.creationDate),
				createDate = [dateStamp.getDate(),
					dateStamp.getMonth() + 1,
					dateStamp.getFullYear()
				].join('/') + ' ' + [dateStamp.getHours(),
					dateStamp.getMinutes()
				].join(':');

			let memberAmount = reclanData.members.length + reclanData.officers.length;

			let membersDividedTwo = 1;
			if (Math.floor(memberAmount / 2) > 0) {
				clanxpmult = Math.floor(memberAmount / 2);
			}

			let membersField = "–ù–µ—Ç";
			if (reclanData.members.length > 0) {
				membersField = "";
				reclanData.members.slice(-7).forEach(async user => {
					membersField += `<@${user.memberID}>\n`
				})
				if ((reclanData.members.length - 7) > 0) {
					membersField += `–ò ${reclanData.members.length-7} –µ—â—ë...`
				}
			}

			let officersField = "–ù–µ—Ç";
			if (reclanData.officers.length > 0) {
				officersField = "";
				reclanData.officers.slice(-7).forEach(async user => {
					officersField += `<@${user.memberID}>\n`
				})
				if ((reclanData.officers.length - 7) > 0) {
					officersField += `–ò ${reclanData.officers.length-7} –µ—â—ë...`
				}
			}

			let isBanner = "–î–∞";
			if (reclanData.bannerLink == "" || reclanData.bannerLink == " " || reclanData.bannerLink == null) {
				isBanner = "–ù–µ—Ç";
			}

			let coinBoost = reclanData.coinMultiply;
			let lvlBoost = reclanData.lvlMultiply;
			let clanXPNeed = xplvlmult * reclanData.level * membersDividedTwo;

			var clanDataEmbed = new Discord.MessageEmbed()
				.setColor(clanColor)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setDescription(`**‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω : <@&${reclanData.roleID}> ${reclanData.symbols}‚óû**\n${reclanData.description}`)
				.addField(`üë§ –í –∫–ª–∞–Ω–µ`, '```' + `${memberAmount}/${reclanData.slots}` + '```', inline = true)
				.addField(`üèÜ –¢—Ä–æ—Ñ–µ–∏`, '```' + `${reclanData.prize}` + '```', inlite = true)
				.addField(`üìÜ –î–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è`, '```' + `${createDate}` + '```', inline = true)
				.addField(`üåü –£—Ä–æ–≤–µ–Ω—å`, '```' + `${reclanData.level}` + '```', inline = true)
				.addField(`‚≠ê –û–ø—ã—Ç`, '```' + `${reclanData.xp}/${clanXPNeed}` + '```', inline = true)
				.addField(`${config.silverCoin} –ë–∞–ª–∞–Ω—Å`, '```' + `${reclanData.balance}` + '```', inlite = true)
				.addField(`‚òÑÔ∏è –ë—É—Å—Ç —Å–µ—Ä–µ–±—Ä–∞`, '```' + `x${reclanData.coinMultiply}` + '```', inlite = true)
				.addField(`üé¥ –ë–∞–Ω–Ω–µ—Ä`, '```' + `${isBanner}` + '```', inlite = true)
				.addField(`üîÆ –ë—É—Å—Ç —É—Ä–æ–≤–Ω—è`, '```' + `x${reclanData.lvlMultiply}` + '```', inlite = true)
				.addField(`‡≠®‡≠ß „Éª –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å:`, `<@${reclanData.ownerID}>`, inline = true)
				.addField(`‡≠®‡≠ß „Éª –û—Ñ–∏—Ü–µ—Ä—ã:`, `${officersField}`, inline = true)
				.addField(`‡≠®‡≠ß „Éª –£—á–∞—Å—Ç–Ω–∏–∫–∏:`, `${membersField}`, inline = true)
				.setTimestamp();

			if (!(reclanData.bannerLink == "" || reclanData.bannerLink == " " || reclanData.bannerLink == null)) {
				clanDataEmbed.setImage(reclanData.bannerLink);
			}

			message.channel.send(clanDataEmbed);
		} else if (args[0] == "create") {
			//–û—Å—Ç–∞–≤–∏—Ç—å –≤ –∏–º–µ–Ω–∏ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã
			let newClanName = args.slice(1).join(' ').replace(/[^a-z–∞-—èA-Z–ê-–Ø0-9 ]/g, "").replace(/\s+/g, ' ').trim();
			if (!newClanName || newClanName.length > 48 || newClanName.length < 3) return message.channel.send(invalidName);
			let clanAlreadyExist = new Discord.MessageEmbed()
				.setColor(config.errColor)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–ö–ª–∞–Ω '${newClanName}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–¥—É–º–∞—Ç—å –¥—Ä—É–≥–æ–µ –∏–º—è.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan != -1) return message.channel.send(youAreInClan);
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			if (userSilver < clanPrice) return message.channel.send(errorCoins);
			//–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –∫–ª–∞–Ω–∞
			if (newClanName == "create" || newClanName == "delete" || newClanName == "invite" || newClanName == "kick" || newClanName == "leave" || newClanName == "officer" || newClanName == "dep" || newClanName == "deposit" || newClanName == "color" || newClanName == "rename" || newClanName == "desc" || newClanName == "description" || newClanName == "symb" || newClanName == "symbol" || newClanName == "banner" || newClanName == "perks" || newClanName == "perk" || newClanName == "upgrade" || newClanName == "version" || newClanName == "bomb" || newClanName == "rob" || newClanName == "bomb" || newClanName == "top" || newClanName == "help") return message.channel.send(invalidName);
			reclanData = await reclanModel.findOne({
				name: newClanName
			});
			if (reclanData) return message.channel.send(clanAlreadyExist);

			let confCreateClan = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω '${newClanName}' –∑–∞ ${clanPrice} ${config.silverCoin}?`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			//–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
			const msg = await message.channel.send(confCreateClan);
			await msg.react("‚úÖ");
			await msg.react("‚ùå");
			await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
					max: 1,
					time: 60000
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "‚úÖ") {
						if (userClan != -1) return msg.edit(youAreInClan);
						//–ù–∞–π—Ç–∏ ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–ª–∞–Ω–∞
						let reclanID = 0;
						docs = await reclanModel.find().estimatedDocumentCount();
						if (docs != 0) {
							res = await reclanModel.find().sort({clanID:-1}).limit(1);
							reclanID = res[0].clanID;
						}
						//–î–æ–±–∞–≤–∏—Ç—å 1 –∫ ID –∫–ª–∞–Ω–∞, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π ID
						reclanID++;

						reclanData = await reclanModel.create({
							clanID: reclanID,
							ownerID: author.id,
							creationDate: Date.now(),
							balance: 0,
							description: clanDefaultDesc,
							lvlMultiply: 1,
							coinMultiply: 1,
							name: newClanName,
							level: 1,
							xp: 0,
							prize: 0,
							slots: 10,
							lastBomb: 0,
							lastRob: 0,
							lastTrap: 0,
							underAttack: 0,
						});
						reclanData.save();

						//–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏ –∫–ª–∞–Ω–∞
						message.guild.roles.create({
							data: {
								name: newClanName,
								position: 63,
							},
						}).then(async role => {
							message.member.roles.add(role);
							message.member.roles.add(config.clanLeaderRole);
							reclanData = await reclanModel.updateOne({
								clanID: reclanID
							}, {
								$set: {
									roleID: role.id
								}
							});
						}).catch(error => console.log(error));

						profileData = await profileModel.updateOne({
							userID: author.id,
						}, {
							$set: {
								clan: reclanID
							},
							$inc: {
								silverCoins: -clanPrice
							}
						});

						message.member.guild.channels.create(newClanName, {
							type: 'voice',
							userLimit: 10,
							parent: config.clanCategory,
							permissionOverwrites: [{
								id: author.id,
								allow: ['VIEW_CHANNEL', 'CONNECT', 'SPEAK']
							}, {
								id: config.everyoneID,
								deny: ['CONNECT', 'SPEAK'],
							}, {
								id: config.nonverifiedUserRole,
								deny: ['VIEW_CHANNEL']
							}]
						}).then(async voice => {
							reclanData = await reclanModel.updateOne({
								clanID: reclanID,
							}, {
								$set: {
									voiceID: voice.id
								}
							});
							message.member.guild.channels.create(newClanName, {
								type: 'text',
								parent: config.clanCategory,
								permissionOverwrites: [{
									id: author.id,
									allow: ['VIEW_CHANNEL', 'SEND_MESSAGES', 'READ_MESSAGE_HISTORY', 'ATTACH_FILES', 'EMBED_LINKS']
								}, {
									id: config.everyoneID,
									deny: ['VIEW_CHANNEL', 'SEND_MESSAGES'],
								}, {
									id: config.nonverifiedUserRole,
									deny: ['VIEW_CHANNEL', 'SEND_MESSAGES']
								}]
							}).then(async chat => {
								reclanData = await reclanModel.updateOne({
									clanID: reclanID,
								}, {
									$set: {
										chatID: chat.id
									}
								});
							})
						})

						let clanCreateSuccess = new Discord.MessageEmbed()
							.setColor(`${config.defaultColor}`)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`–ö–ª–∞–Ω '${newClanName}' –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω!\n\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${userSilver - clanPrice} ${config.silverCoin}`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(clanCreateSuccess);

						return;
					} else if (collected.first().emoji.name == "‚ùå") {
						msg.edit(cancel);
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async err => {
					msg.edit(cancel);
					console.warn(err);
					return;
				});
		} else if (args[0] == "delete") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º
			if (!message.member.roles.cache.has(config.clanLeaderRole)) return message.channel.send(noOwnClan);

			let confClanDelete = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –∫–ª–∞–Ω <@&${reclanData.roleID}>?`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			const msg = await message.channel.send(confClanDelete);
			await msg.react("‚úÖ");
			await msg.react("‚ùå");
			await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
					max: 1,
					time: 60000
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "‚úÖ") {
						if (userClan == -1) return msg.edit(youAreNotInClan);

						reclanDeleteResponce = await reclanModel.deleteOne({
							clanID: userClan
						});

						profileData = await profileModel.updateOne({
							userID: author.id,
						}, {
							$set: {
								clan: -1,
							}
						});

						if (reclanData.members.length > 0) {
							reclanData.members.forEach(async user => {
								profileData = await profileModel.updateOne({
									userID: user.memberID,
								}, {
									$set: {
										clan: -1
									}
								});
							})
						}

						if (reclanData.officers.length > 0) {
							reclanData.officers.forEach(async user => {
								profileData = await profileModel.updateOne({
									userID: user.memberID,
								}, {
									$set: {
										clan: -1
									}
								});
								//–°–Ω–∏–º–∞—Ç—å —Ä–æ–ª—å –æ—Ñ–∏—Ü–µ—Ä–∞
								bot.guilds.cache.get(config.serverId).members.cache.get(user.memberID).roles.remove(config.clanOfficerRole);
							})
						}

						//–°–Ω—è—Ç—å —Ä–æ–ª—å –∫–ª–∞–Ω –ª–∏–¥–µ—Ä–∞
						bot.guilds.cache.get(config.serverId).members.cache.get(reclanData.ownerID).roles.remove(config.clanLeaderRole);

						//–£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∫–ª–∞–Ω–∞
						bot.guilds.cache.get(config.serverId).roles.cache.get(reclanData.roleID).delete();

						//–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª—ã –∫–ª–∞–Ω–∞
						bot.channels.cache.get(reclanData.chatID).delete();
						bot.channels.cache.get(reclanData.voiceID).delete();

						let deleteSuccess = new Discord.MessageEmbed()
							.setColor(`${config.defaultColor}`)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`–ö–ª–∞–Ω '${reclanData.name}' –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(deleteSuccess);

						return;
					} else if (collected.first().emoji.name == "‚ùå") {
						msg.edit(cancel);
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async () => {
					msg.edit(cancel);
					return;
				});
		} else if (args[0] == "invite") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (membersAmount > reclanData.slots) return message.channel.send(noSlots);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º –∏–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–æ–º
			if (!(message.member.roles.cache.has(config.clanLeaderRole) || message.member.roles.cache.has(config.clanOfficerRole))) return message.channel.send(noPermissions);
			if (target.id == author.id) return message.channel.send(urself);
			if (target.user.bot || !target) return message.channel.send(noTarget);
			let targetData = await profileModel.findOne({
				userID: target.id,
			});
			if (targetData.clan != -1) return message.channel.send(userInClan);

			let clanInvite = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`${target}, –í—ã –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤ –∫–ª–∞–Ω <@&${reclanData.roleID}>!`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			const msg = await message.channel.send(clanInvite);
			await msg.react("‚úÖ");
			await msg.react("‚ùå");
			await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
					max: 1,
					time: 60000
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "‚úÖ") {
						if (userClan == -1) return msg.edit(youAreNotInClan);

						profileData = await profileModel.updateOne({
							userID: target.id,
						}, {
							$set: {
								clan: reclanData.clanID
							}
						});

						let newMember = {
							memberID: target.id
						};

						await reclanModel.updateOne({
							clanID: reclanData.clanID,
						}, {
							$push: {
								members: newMember,
							}
						});

						bot.channels.cache.get(voiceID).updateOverwrite(target.id, {
							CONNECT: true,
							SPEAK: true,
							VIEW_CHANNEL: true
						});
						bot.channels.cache.get(chatID).updateOverwrite(target.id, {
							VIEW_CHANNEL: true,
							SEND_MESSAGES: true,
							VIEW_CHANNEL: true,
							SEND_MESSAGES: true,
							READ_MESSAGE_HISTORY: true,
							ATTACH_FILES: true,
							EMBED_LINKS: true
						});
						target.roles.add(reclanData.roleID)
						//message.guild.members.cache.get(target.id).roles.add(reclanData.roleID);

						let clanInviteSuccess = new Discord.MessageEmbed()
							.setColor(`${config.defaultColor}`)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`${target}, —Ç–µ–ø–µ—Ä—å –í—ã —É—á–∞—Å—Ç–Ω–∏–∫ –∫–ª–∞–Ω–∞ <@&${reclanData.roleID}>!`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(clanInviteSuccess);

						return;
					} else if (collected.first().emoji.name == "‚ùå") {
						let clanInviteCancel = new Discord.MessageEmbed()
							.setColor(`${config.defaultColor}`)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`${target} –æ—Ç–∫–∞–∑–∞–ª—Å—è –≤—Å—Ç—É–ø–∞—Ç—å –≤ –∫–ª–∞–Ω <@&${reclanData.roleID}>`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(clanInviteCancel);
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async () => {
					msg.edit(cancel);
					return;
				});
		} else if (args[0] == "kick") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º –∏–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–æ–º
			if (!(message.member.roles.cache.has(config.clanLeaderRole) || message.member.roles.cache.has(config.clanOfficerRole))) return message.channel.send(noPermissions);
			if (target.id == author.id) return message.channel.send(urself);
			if (target.user.bot || !target) return message.channel.send(noTarget);
			let targetData = await profileModel.findOne({
				userID: target.id,
			});
			if (targetData.clan != reclanData.clanID) return message.channel.send(userNotInYourClan);
			if (target.member.roles.cache.has(config.clanOfficerRole)) return message.channel.send(youCantKickOfficer)

			let confKick = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≥–Ω–∞—Ç—å ${target} –∏–∑ –∫–ª–∞–Ω–∞?`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			const msg = await message.channel.send(confKick);
			await msg.react("‚úÖ");
			await msg.react("‚ùå");
			await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
					max: 1,
					time: 60000
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "‚úÖ") {
						if (userClan == -1) return msg.edit(youAreNotInClan);

						await profileModel.updateOne({
							userID: target.id,
						}, {
							$set: {
								clan: -1
							}
						});

						await reclanModel.updateOne({
							clanID: reclanData.clanID,
						}, {
							$pull: {
								members: {
									memberID: target.id
								}
							}
						});


						bot.channels.cache.get(clanVoice).permissionOverwrites.get(target.id).delete();
						bot.channels.cache.get(clanChat).permissionOverwrites.get(target.id).delete();

						message.guild.members.cache.get(target.id).roles.remove(reclanData.roleID);

						let userKickSuccess = new Discord.MessageEmbed()
							.setColor(`${config.defaultColor}`)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${target} –±—ã–ª –≤—ã–≥–Ω–∞–Ω –∏–∑ –∫–ª–∞–Ω–∞ <@&${reclanData.roleID}>`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(userKickSuccess);

						return;
					} else if (collected.first().emoji.name == "‚ùå") {
						msg.edit(cancel);
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async () => {
					msg.edit(cancel);
					return;
				});
		} else if (args[0] == "leave") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º
			if (message.member.roles.cache.has(config.clanLeaderRole)) return message.channel.send(youCantLeaveYourClan);

			let confKick = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å –∫–ª–∞–Ω <@&${reclanData.roleID}>?`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			const msg = await message.channel.send(confKick);
			await msg.react("‚úÖ");
			await msg.react("‚ùå");
			await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
					max: 1,
					time: 60000
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "‚úÖ") {
						if (userClan == -1) return msg.edit(youAreNotInClan);

						await profileModel.updateOne({
							userID: author.id,
						}, {
							$set: {
								clan: -1
							}
						});

						if (message.member.roles.cache.has(config.clanOfficerRole)) {
							await reclanModel.updateOne({
								clanID: reclanData.clanID,
							}, {
								$pull: {
									officers: {
										memberID: author.id
									}
								}
							});
							message.guild.members.cache.get(author.id).roles.remove(config.clanOfficerRole);
						} else {
							await reclanModel.updateOne({
								clanID: reclanData.clanID,
							}, {
								$pull: {
									members: {
										memberID: author.id
									}
								}
							});
						}


						bot.channels.cache.get(clanVoice).permissionOverwrites.get(author.id).delete();
						bot.channels.cache.get(clanChat).permissionOverwrites.get(author.id).delete();

						message.guild.members.cache.get(author.id).roles.remove(reclanData.roleID);

						let userLeaveSuccess = new Discord.MessageEmbed()
							.setColor(`${config.defaultColor}`)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –∫–ª–∞–Ω <@&${reclanData.roleID}>`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(userLeaveSuccess);

						return;
					} else if (collected.first().emoji.name == "‚ùå") {
						msg.edit(cancel);
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async () => {
					msg.edit(cancel);
					return;
				});
		} else if (args[0] == "officer") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º –∏–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–æ–º
			if (!message.member.roles.cache.has(config.clanLeaderRole)) return message.channel.send(noOwnClan);
			if (target.id == author.id) return message.channel.send(urself);
			if (target.user.bot || !target) return message.channel.send(noTarget);
			let targetData = await profileModel.findOne({
				userID: target.id,
			});
			if (targetData.clan != reclanData.clanID) return message.channel.send(userNotInYourClan);

			let newMember = {
				memberID: target.id
			};

			if (target.member.roles.cache.has(config.clanOfficerRole)) {
				await reclanModel.updateOne({
					clanID: reclanData.clanID,
				}, {
					$pull: {
						officers: {
							memberID: target.id
						}
					},
					$push: {
						members: newMember
					}
				});

				let notOfficerAnymore = new Discord.MessageEmbed()
					.setColor(`${config.defaultColor}`)
					.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
					.setDescription(`${target} –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–µ—Ä–æ–º –∫–ª–∞–Ω–∞.`)
					.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
					.setTimestamp();

				message.channel.send(notOfficerAnymore);

				bot.guilds.cache.get(config.serverId).members.cache.get(target.id).roles.remove(config.clanOfficerRole);
			} else {
				await reclanModel.updateOne({
					clanID: reclanData.clanID,
				}, {
					$pull: {
						members: {
							memberID: target.id
						}
					},
					$push: {
						officers: newMember
					}
				});
				let isNowOfficer = new Discord.MessageEmbed()
					.setColor(`${config.defaultColor}`)
					.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
					.setDescription(`${target} —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–µ—Ä–æ–º –∫–ª–∞–Ω–∞.`)
					.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
					.setTimestamp();

				message.channel.send(isNowOfficer);

				bot.guilds.cache.get(config.serverId).members.cache.get(target.id).roles.add(config.clanOfficerRole);
			}
		} else if (args[0] == "dep" || args[0] == "deposit") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			if (!args[1] || isNaN(args[1]) || (args[1] <= 0)) return message.channel.send(noArgMoney);
			deposeData = await deposeModel.findOne({
				userID: author.id
			});
			if (!deposeData) {
				depose = await deposeModel.create({
					userID: author.id,
					deposed: 0,
					lastDepose: 0,
				});
				//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
				depose.save();
			}
			let moneyToDeposit = parseInt(args[1]);
			if (userSilver < moneyToDeposit) return message.channel.send(errorCoins);
			deposeData = await deposeModel.findOne({
				userID: author.id
			});

			let timeOut = deposeCooldown - (Date.now() - deposeData.lastDepose);

			const seconds = Math.floor((timeOut / 1000) % 60);
			const minutes = Math.floor((timeOut / 1000 / 60) % 60);
			const hours = Math.floor((timeOut / 1000 / 60 / 60) % 24);

			let timeoutDeposit = new Discord.MessageEmbed()
				.setColor(config.defaultColor)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É–∂–µ –≤–ª–æ–∂–∏–ª–∏ –≤ –∫–ª–∞–Ω ${clanDepositLimit} ${config.silverCoin} –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 —á–∞—Å–æ–≤.\n\n–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∫–ª–∞–Ω–∞: **${hours}—á. ${minutes}–º. ${seconds}—Å.**`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			if (deposeData.deposed >= clanDepositLimit && (Date.now() - deposeData.lastDepose) < deposeCooldown) return message.channel.send(timeoutDeposit);

			if ((Date.now() - deposeData.lastDepose) > deposeCooldown) {
				deposeData.deposed = 0;
			}

			if ((deposeData.deposed + moneyToDeposit) > clanDepositLimit) {
				moneyToDeposit = clanDepositLimit - deposeData.deposed;
			}

			await reclanModel.updateOne({
				clanID: userClan,
			}, {
				$inc: {
					balance: moneyToDeposit
				}
			});

			await profileModel.updateOne({
				userID: author.id,
			}, {
				$inc: {
					silverCoins: -moneyToDeposit
				}
			});

			if ((Date.now() - deposeData.lastDepose) > deposeCooldown) {
				await deposeModel.updateOne({
					userID: author.id,
				}, {
					$set: {
						deposed: moneyToDeposit,
						lastDepose: Date.now()
					}
				});
			} else {
				await deposeModel.updateOne({
					userID: author.id,
				}, {
					$set: {
						lastDepose: Date.now()
					},
					$inc: {
						deposed: moneyToDeposit
					}
				});
			}

			let deposedEmbed = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞ –Ω–∞ ${moneyToDeposit} ${config.silverCoin}\n\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${userSilver-moneyToDeposit} ${config.silverCoin}`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			message.channel.send(deposedEmbed);
		} else if (args[0] == "color") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º
			if (!message.member.roles.cache.has(config.clanLeaderRole)) return message.channel.send(noOwnClan);
			if (reclanData.balance < colorPrice) return message.channel.send(noClanBalance);
			let newColor = args[1];
			if (!newColor || !isHexColor(newColor)) return message.channel.send(invalidHex);

			let confColor = new Discord.MessageEmbed()
				.setColor(newColor)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–≤–µ—Ç –∫–ª–∞–Ω–∞ –Ω–∞ ${newColor}?`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			const msg = await message.channel.send(confColor);
			await msg.react("‚úÖ");
			await msg.react("‚ùå");
			await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
					max: 1,
					time: 60000
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "‚úÖ") {
						if (userClan == -1) return msg.edit(youAreNotInClan);

						message.guild.roles.cache.get(reclanData.roleID).setColor(newColor);

						await reclanModel.updateOne({
							clanID: userClan,
						}, {
							$inc: {
								balance: -colorPrice
							}
						});

						let colorSuccess = new Discord.MessageEmbed()
							.setColor(newColor)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`–ù–æ–≤—ã–π —Ü–≤–µ—Ç –∫–ª–∞–Ω–∞ <@&${reclanData.roleID}> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(colorSuccess);

						return;
					} else if (collected.first().emoji.name == "‚ùå") {
						msg.edit(cancel);
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async () => {
					msg.edit(cancel);
					return;
				});
		} else if (args[0] == "rename") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º
			if (!message.member.roles.cache.has(config.clanLeaderRole)) return message.channel.send(noOwnClan);
			if (reclanData.balance < renamePrice) return message.channel.send(noClanBalance);
			let newName = args.slice(1).join(' ').replace(/[^a-z–∞-—èA-Z–ê-–Ø0-9 ]/g, "").replace(/\s+/g, ' ').trim();

			let clanAlreadyExist = new Discord.MessageEmbed()
				.setColor(config.errColor)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–ö–ª–∞–Ω '${newName}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–¥—É–º–∞—Ç—å –¥—Ä—É–≥–æ–µ –∏–º—è.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			isExist = await reclanModel.findOne({
				name: newName,
			});

			if (isExist) return message.channel.send(clanAlreadyExist);

			let confRename = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å –∏–º—è –∫–ª–∞–Ω–∞ <@&${reclanData.roleID}> –Ω–∞ \`${newName}\`?`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			const msg = await message.channel.send(confRename);
			await msg.react("‚úÖ");
			await msg.react("‚ùå");
			await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
					max: 1,
					time: 60000
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "‚úÖ") {
						if (userClan == -1) return msg.edit(youAreNotInClan);

						await reclanModel.updateOne({
							clanID: reclanData.clanID,
						}, {
							$inc: {
								balance: -renamePrice
							},
							$set: {
								name: newName
							}
						});

						bot.channels.cache.get(reclanData.chatID).setName(newName);
						bot.channels.cache.get(reclanData.voiceID).setName(newName);
						message.guild.roles.cache.get(reclanData.roleID).setName(newName);

						let renameSuccess = new Discord.MessageEmbed()
							.setColor(`${config.defaultColor}`)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`–ò–º—è –∫–ª–∞–Ω–∞ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ <@&${reclanData.roleID}>`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(renameSuccess);

						return;
					} else if (collected.first().emoji.name == "‚ùå") {
						msg.edit(cancel);
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async (err) => {
					msg.edit(cancel);
					console.log(err);
					return;
				});
		} else if (args[0] == "desc" || args[0] == "description") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º
			if (!message.member.roles.cache.has(config.clanLeaderRole)) return message.channel.send(noOwnClan);
			if (reclanData.balance < descriptionPrice) return message.channel.send(noClanBalance);
			let newDescription = args.slice(1).join(' ');
			let descriptionInvalid = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ –¥–ª–∏–Ω–Ω–µ–µ 512 —Å–∏–º–≤–æ–ª–æ–≤.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			if (newDescription.length > 512) return message.channel.send(descriptionInvalid);
			let noDescription = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			if (newDescription.length < 1) return message.channel.send(noDescription);

			let confDesc = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ –Ω–∞: ${newDescription}?`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			const msg = await message.channel.send(confDesc);
			await msg.react("‚úÖ");
			await msg.react("‚ùå");
			await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
					max: 1,
					time: 60000
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "‚úÖ") {
						if (userClan == -1) return msg.edit(youAreNotInClan);

						await reclanModel.updateOne({
							clanID: userClan,
						}, {
							$inc: {
								balance: -descriptionPrice
							},
							$set: {
								description: newDescription
							}
						});

						let descSuccess = new Discord.MessageEmbed()
							.setColor(`${config.defaultColor}`)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`–û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: ${newDescription}`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(descSuccess);

						return;
					} else if (collected.first().emoji.name == "‚ùå") {
						msg.edit(cancel);
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async () => {
					msg.edit(cancel);
					return;
				});
		} else if (args[0] == "symb" || args[0] == "symbol") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º
			if (!message.member.roles.cache.has(config.clanLeaderRole)) return message.channel.send(noOwnClan);
			if (reclanData.balance < symbolPrice) return message.channel.send(noClanBalance);
			let clanSymbol = args.slice(1).join(' ').replace(/[a-zA-Z0-9 `!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/g, "");
			let noSymbArg = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–í—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å —Å–∏–º–≤–æ–ª(—ã) –∫–ª–∞–Ω–∞.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			if (!clanSymbol || clanSymbol.length <= 0 || clanSymbol.length > 8) return message.channel.send(noSymbArg);

			let confSymb = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏–º–≤–æ–ª(—ã) –∫–ª–∞–Ω–∞ –Ω–∞: ${clanSymbol}?`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			const msg = await message.channel.send(confSymb);
			await msg.react("‚úÖ");
			await msg.react("‚ùå");
			await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
					max: 1,
					time: 60000
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "‚úÖ") {
						if (userClan == -1) return msg.edit(youAreNotInClan);

						await reclanModel.updateOne({
							clanID: userClan,
						}, {
							$inc: {
								balance: -symbolPrice
							},
							$set: {
								symbols: clanSymbol
							}
						});

						let symbSuccess = new Discord.MessageEmbed()
							.setColor(`${config.defaultColor}`)
							.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
							.setDescription(`–°–∏–º–≤–æ–ª(—ã) –∫–ª–∞–Ω–∞ –±—ã–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞: ${clanSymbol}`)
							.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
							.setTimestamp();

						msg.edit(symbSuccess);

						return;
					} else if (collected.first().emoji.name == "‚ùå") {
						msg.edit(cancel);
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async () => {
					msg.edit(cancel);
					return;
				});
		} else if (args[0] == "banner") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º
			if (!message.member.roles.cache.has(config.clanLeaderRole)) return message.channel.send(noOwnClan);
			if (reclanData.balance < bannerPrice) return message.channel.send(noClanBalance);
			if (reclanData.level < 2) return message.channel.send(youCantSetBannerNow);

			let waitingForABanner = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–∞–Ω–Ω–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –í—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.\n‚ùï\`–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä –±–∞–Ω–Ω–µ—Ä–∞: 540x200 –∏ –±–æ–ª–µ–µ.\``)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			let noAttachment = new Discord.MessageEmbed()
				.setColor(config.errColor)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–í—ã –∑–∞–±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –±–∞–Ω–Ω–µ—Ä–∞.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			let filter = m => m.author.id === message.author.id;
			let msgf = message.channel.send(waitingForABanner).then(() => {
				message.channel.awaitMessages(filter, {
						max: 1,
						time: 60000,
						errors: ['time']
					})
					.then(async message => {
						message = message.first();
						if (message.attachments.size > 0) {
							message.attachments.forEach(async Attachment => {
								//console debug
								console.info(Attachment.url);

								let newBannerURL = Attachment.url;

								let confBanner = new Discord.MessageEmbed()
									.setColor(`${config.defaultColor}`)
									.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
									.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–π –±–∞–Ω–Ω–µ—Ä –∫–ª–∞–Ω–∞?`)
									.setImage(newBannerURL)
									.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
									.setTimestamp();

								const msg = await message.channel.send(confBanner);
								await msg.react("‚úÖ");
								await msg.react("‚ùå");
								await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
										max: 1,
										time: 60000
									})
									.then(async collected => {
										msg.reactions.removeAll();

										if (collected.first().emoji.name == "‚úÖ") {
											if (userClan == -1) return msg.edit(youAreNotInClan);

											await reclanModel.updateOne({
												clanID: userClan,
											}, {
												$inc: {
													balance: -bannerPrice
												},
												$set: {
													bannerLink: newBannerURL
												}
											});

											let bannerSuccess = new Discord.MessageEmbed()
												.setColor(`${config.defaultColor}`)
												.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
												.setDescription(`–ë–∞–Ω–Ω–µ—Ä –∫–ª–∞–Ω–∞ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.`)
												.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
												.setTimestamp();

											msg.edit(bannerSuccess);

											return;
										} else if (collected.first().emoji.name == "‚ùå") {
											msg.edit(cancel);
											return;
										} else {
											return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
										}
									}).catch(async () => {
										msg.edit(cancel);
										return;
									});

							})
						} else {
							msg.edit(noAttachment);
						}
					})
					.catch((collected) => {
						message.channel.send(noAttachment);
						console.log(collected);
					});
			})
		} else if (args[0] == "perks" || args[0] == "perk") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);

			let perksEmbed = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.addField(`\u200b`, '**‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ë—É—Å—Ç —Å–µ—Ä–µ–±—Ä–∞ +100% ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ**', inline = false)
				.addField(`–ò–Ω–¥–µ–∫—Å`, '`1`', inline = true)
				.addField(`–û–ø–∏—Å–∞–Ω–∏–µ`, `–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ —Å–µ—Ä–µ–±—Ä–∞ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞ –≤ N —Ä–∞–∑.`, inline = true)
				.addField(`–¶–µ–Ω–∞`, `${coinBoost} ${config.silverCoin}`, inline = true)
				.addField(`\u200b`, '**‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ë—É—Å—Ç –æ–ø—ã—Ç–∞ +100% ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ**', inline = false)
				.addField(`–ò–Ω–¥–µ–∫—Å`, '`2`', inline = true)
				.addField(`–û–ø–∏—Å–∞–Ω–∏–µ`, `–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ –æ–ø—ã—Ç–∞ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞ –≤ N —Ä–∞–∑.`, inline = true)
				.addField(`–¶–µ–Ω–∞`, `${lvlBoost} ${config.silverCoin}`, inline = true)
				.addField(`\u200b`, '**‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ—Ç—ã ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ**', inline = false)
				.addField(`–ò–Ω–¥–µ–∫—Å`, '`3`', inline = true)
				.addField(`–û–ø–∏—Å–∞–Ω–∏–µ`, `–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤ –≤ –∫–ª–∞–Ω–µ –Ω–∞ 5.`, inline = true)
				.addField(`–¶–µ–Ω–∞`, `${slotsBoost} ${config.silverCoin}`, inline = true)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			message.channel.send(perksEmbed);
		} else if (args[0] == "upgrade") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			if (reclanData.underAttack == true) return message.channel.send(clanIsUnderAttack);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º
			if (!message.member.roles.cache.has(config.clanLeaderRole)) return message.channel.send(noOwnClan);
			if (reclanData.level < 3) return message.channel.send(youCantUpgradeClan);

			let noIndexUp = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–ò–Ω–¥–µ–∫—Å —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			if (!args[1] || isNaN(args[1]) || (args[1] <= 0)) return message.channel.send(noIndexUp);
			let index = args[1];
			let invalidIndexUp = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–ò–Ω–¥–µ–∫—Å —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 3`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			if (index > 3) return message.channel.send(invalidIndexUp);
			if (index == 1) {
				if (reclanData.balance < coinBoost) return message.channel.send(noClanBalance);
				let confCoinBoost = new Discord.MessageEmbed()
					.setColor(`${config.defaultColor}`)
					.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
					.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å –±—É—Å—Ç —Å–µ—Ä–µ–±—Ä–∞ –¥–æ —É—Ä–æ–≤–Ω—è ${reclanData.coinMultiply+1}?`)
					.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
					.setTimestamp();
				const msg = await message.channel.send(confCoinBoost);
				await msg.react("‚úÖ");
				await msg.react("‚ùå");
				await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
						max: 1,
						time: 30000
					})
					.then(async collected => {
						msg.reactions.removeAll();

						if (collected.first().emoji.name == "‚úÖ") {
							if (userClan == -1) return msg.edit(youAreNotInClan);
							await reclanModel.updateOne({
								clanID: userClan,
							}, {
								$inc: {
									coinMultiply: 1,
									balance: -coinBoost
								}
							});

							let coinBoostSuccess = new Discord.MessageEmbed()
								.setColor(`${config.defaultColor}`)
								.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
								.setDescription(`–ë—É—Å—Ç —Å–µ—Ä–µ–±—Ä–∞ –±—ã–ª —É–ª—É—á—à–µ–Ω –¥–æ —É—Ä–æ–≤–Ω—è ${reclanData.coinMultiply+1}.`)
								.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
								.setTimestamp();

							msg.edit(coinBoostSuccess);
							return;
						} else if (collected.first().emoji.name == "‚ùå") {
							msg.edit(cancel);
							return;
						} else {
							return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
						}
					}).catch(async err => {
						msg.edit(cancel);
						return;
					});
			} else if (index == 2) {
				if (reclanData.balance < lvlBoost) return message.channel.send(noClanBalance);
				let confLevelBoost = new Discord.MessageEmbed()
					.setColor(`${config.defaultColor}`)
					.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
					.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å –±—É—Å—Ç –æ–ø—ã—Ç–∞ –¥–æ —É—Ä–æ–≤–Ω—è ${reclanData.lvlMultiply+1}?`)
					.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
					.setTimestamp();
				const msg = await message.channel.send(confLevelBoost);
				await msg.react("‚úÖ");
				await msg.react("‚ùå");
				await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
						max: 1,
						time: 30000
					})
					.then(async collected => {
						msg.reactions.removeAll();

						if (collected.first().emoji.name == "‚úÖ") {
							msg.reactions.removeAll();
							if (userClan == -1) return msg.edit(youAreNotInClan);

							await reclanModel.updateOne({
								clanID: userClan,
							}, {
								$inc: {
									lvlMultiply: 1,
									balance: -lvlBoost
								}
							});

							let levelBoostSuccess = new Discord.MessageEmbed()
								.setColor(`${config.defaultColor}`)
								.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
								.setDescription(`–ë—É—Å—Ç –æ–ø—ã—Ç–∞ –±—ã–ª —É–ª—É—á—à–µ–Ω –¥–æ —É—Ä–æ–≤–Ω—è ${reclanData.lvlMultiply+1}.`)
								.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
								.setTimestamp();

							msg.edit(levelBoostSuccess);
							return;
						} else if (collected.first().emoji.name == "‚ùå") {
							msg.edit(cancel);
							return;
						} else {
							return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
						}
					}).catch(async err => {
						msg.edit(cancel);
						return;
					});
			} else if (index == 3) {
				if (reclanData.balance < slotsBoost) return message.channel.send(noClanBalance);
				if (reclanData.slots > 95) return message.channel.send(youHaveAMaxAmmountOfSlots)
				let confSlots = new Discord.MessageEmbed()
					.setColor(`${config.defaultColor}`)
					.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
					.setDescription(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 5 —Å–ª–æ—Ç–æ–≤ –≤ –∫–ª–∞–Ω?`)
					.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
					.setTimestamp();
				const msg = await message.channel.send(confSlots);
				await msg.react("‚úÖ");
				await msg.react("‚ùå");
				await msg.awaitReactions((reaction, user) => user.id == author.id && (reaction.emoji.name == "‚úÖ" || reaction.emoji.name == "‚ùå"), {
						max: 1,
						time: 30000
					})
					.then(async collected => {
						if (collected.first().emoji.name == "‚úÖ") {
							msg.reactions.removeAll();
							if (userClan == -1) return msg.edit(youAreNotInClan);

							await reclanModel.updateOne({
								clanID: userClan,
							}, {
								$inc: {
									slots: 5,
									balance: -slotsBoost
								}
							});

							let newVoiceLimit = reclanData.slots + 5;
							bot.channels.cache.get(reclanData.voiceID).setUserLimit(newVoiceLimit);

							let slotsSuccess = new Discord.MessageEmbed()
								.setColor(`${config.defaultColor}`)
								.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
								.setDescription(`–ë—ã–ª–∏ –∫—É–ø–ª–µ–Ω—ã –Ω–æ–≤—ã–µ 5 —Å–ª–æ—Ç–æ–≤ –≤ –∫–ª–∞–Ω. –¢–µ–ø–µ—Ä—å –≤ –∫–ª–∞–Ω–µ ${newVoiceLimit} –º–µ—Å—Ç.`)
								.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
								.setTimestamp();

							msg.edit(slotsSuccess);
							return;
						} else if (collected.first().emoji.name == "‚ùå") {
							msg.edit(cancel);
							return;
						} else {
							return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
						}
					}).catch(async err => {
						msg.edit(cancel);
						return;
					});
			}
		} else if (args[0] == "version") {
			message.channel.send(systemInfo);
		} else if (args[0] == "bomb") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º –∏–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–æ–º
			if (!(message.member.roles.cache.has(config.clanLeaderRole) || message.member.roles.cache.has(config.clanOfficerRole))) return message.channel.send(noPermissions);
			if (reclanData.balance < bombPrice) return message.channel.send(noClanBalance);
			let attackToID = args[1];
			if (!attackToID) return message.channel.send(youForgotToSpecifyID);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –∞—Ç–∞–∫—É—é—Ç
			attackedData = await reclanModel.findOne({
				name: attackToID
			});
			let thisClanDoesntExist = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–¢–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			if (!attackedData) return message.channel.send(thisClanDoesntExist)
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–ª–∞–Ω —Ç–µ–º –∂–µ, —á—Ç–æ –∏ –∞—Ç–∞–∫–∫—É—é—Ç
			if (attackedData.clanID == reclanData.clanID) return message.channel.send(youCantAttackYourClan);
			let timeOut = (bombCooldown - (Date.now() - reclanData.lastBomb));
			const seconds = Math.floor((timeOut / 1000) % 60);
			const minutes = Math.floor((timeOut / 1000 / 60) % 60);
			const hours = Math.floor((timeOut / 1000 / 60 / 60) % 24);

			let bombOnCooldown = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–í—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø—è—Ç—å –ø–æ–¥–ª–æ–∂–∏—Ç—å –∫–æ–º—É-—Ç–æ –±–æ–º–±—É —á–µ—Ä–µ–∑: **${hours}—á. ${minutes}–º. ${seconds}—Å.**`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			if (Date.now() < (reclanData.lastBomb + bombCooldown)) return message.channel.send(bombOnCooldown);

			let attackToMembersNumber = attackedData.members.length + attackedData.officers.length;
			let membersNeeded = Math.floor(attackToMembersNumber / 100 * 60) + 1;
			let clanColor = message.guild.roles.cache.get(attackedData.roleID).color;
			let attackToWillLost = Math.floor(attackedData.balance / 100 * 8);

			let clanBombEmbed = new Discord.MessageEmbed()
				.setColor(clanColor)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –í–∞—Å –∞—Ç–∞–∫—É—é—Ç!‚óû")
				.setDescription(`‚ùï –í–Ω–∏–º–∞–Ω–∏–µ! –ö–ª–∞–Ω <@&${reclanData.roleID}> —Ç–∞–π–Ω–æ –ø—Ä–æ–Ω–∏–∫ –≤ –≤–∞—à–µ —É–±–µ–∂–∏—â–µ –∏ –∑–∞–ª–æ–∂–∏–ª –≤ –Ω—ë–º **–±–æ–ª—å—à—É—é –±–æ–º–±—É**, —É—Å—Ç–∞–Ω–æ–≤–∏–≤ —Ç–∞–π–º–µ—Ä –Ω–∞ 15 –º–∏–Ω—É—Ç!\n\n–£ –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ–≥–æ **15 –º–∏–Ω—É—Ç**, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏ –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –µ—ë, –∏–Ω–∞—á–µ –≤–∞—à –∫–ª–∞–Ω **–ø–æ—Ç–µ—Ä—è–µ—Ç** ${attackToWillLost} ${config.silverCoin}\n\n` + '`' + `–ß—Ç–æ–±—ã –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –±–æ–º–±—É - 60% (${membersNeeded}) —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞ –¥–æ–ª–∂–Ω—ã –Ω–∞–∂–∞—Ç—å –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é üí£` + '`')
				.setTimestamp();

			let clanBombEmbedSuccessSend = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–Ω–∏–∫–ª–∏ –≤ —É–±–µ–∂–∏—â–µ –∫–ª–∞–Ω–∞ <@&${attackedData.roleID}> –∏ –∑–∞–ª–æ–∂–∏–ª–∏ –≤ –Ω—ë–º **–±–æ–±–º—É**!\n–¢–µ–ø–µ—Ä—å —É –∫–ª–∞–Ω–∞ –µ—Å—Ç—å –≤—Å–µ–≥–æ **15 –º–∏–Ω—É—Ç**, —á—Ç–æ–±—ã –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –µ—ë.\n\n–ï—Å–ª–∏ –≤–∞—à–∞ –±–æ–º–±–∞ **–Ω–µ** –±—É–¥–µ—Ç —Ä–∞–∑–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∞ –≤–æ–≤—Ä–µ–º—è, —Ç–æ –≤–∞—à –∫–ª–∞–Ω –ø–æ–ª—É—á–∏—Ç ${attackToWillLost} ${config.silverCoin}`)
				.setTimestamp();

			let clanBombEmbedToAttackDefuse = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!‚óû")
				.setDescription(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–µ–∑–≤—Ä–µ–¥–µ–ª–∏ –±–æ–º–±—É –æ—Ç –∫–ª–∞–Ω–∞ <@&${reclanData.roleID}> –∏ —Å–º–æ–≥–ª–∏ –∑–∞—â–∏—Ç–∏—Ç—å ${attackToWillLost} ${config.silverCoin}, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏–ª–∏ 1000 ${config.silverCoin} –Ω–∞ —Å—á—ë—Ç —Å–≤–æ–µ–≥–æ –∫–ª–∞–Ω–∞ –∏ 2 —Ç—Ä–æ—Ñ–µ—è üèÜ!`)
				.setTimestamp();

			let clanBombAttackToEmbedNotdefused = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö üí•üí•üí•üí•üí•üí•‚óû")
				.setDescription(`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –∫–ª–∞–Ω –Ω–µ —É—Å–ø–µ–ª –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –±–æ–º–±—É –æ—Ç –∫–ª–∞–Ω–∞ <@&${reclanData.roleID}> –∏ –ø–æ—Ç–µ—Ä—è–ª ${attackToWillLost} ${config.silverCoin} —Å–æ —Å–≤–æ–µ–≥–æ —Å—á—ë—Ç–∞.`)
				.setTimestamp();

			let clanBombEmbedNotdefused = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–ö–ª–∞–Ω <@&${attackedData.roleID}> –Ω–µ —É—Å–ø–µ–ª –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –≤–∞—à—É –±–æ–º–±—É –∑–∞ 15 –º–∏–Ω—É—Ç –∏ –æ–Ω–∞ –≤–∑–æ—Ä–≤–∞–ª–∞—Å—å!\n\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${attackToWillLost} ${config.silverCoin} —Å –∏—Ö —Å—á—ë—Ç–∞ –∏ 6 —Ç—Ä–æ—Ñ–µ–µ–≤ üèÜ!`)
				.setTimestamp();

			let clanBombEmbedDefused = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–ö–ª–∞–Ω <@&${attackedData.roleID}> —É—Å–ø–µ–ª –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –≤–∞—à—É –±–æ–º–±—É –∑–∞ 15 –º–∏–Ω—É—Ç!\n\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${bombPrice} ${config.silverCoin} –∑–∞ –±–æ–º–±—É.`)
				.setTimestamp();

			await reclanModel.updateOne({
				clanID: userClan
			}, {
				$inc: {
					balance: -bombPrice,
				},
				$set: {
					lastBomb: Date.now()
				}
			});

			await reclanModel.updateOne({
				clanID: attackedData.clanID
			}, {
				$set: {
					underAttack: 1
				}
			});

			message.channel.send(clanBombEmbedSuccessSend);

			const msg = await bot.channels.cache.find(ch => ch.id == attackedData.chatID).send(`<@&${attackedData.roleID}>`, clanBombEmbed);
			await msg.react("üí£");
			await msg.awaitReactions((reaction, user) => reaction.count >= (membersNeeded + 1) && (reaction.emoji.name == "üí£"), {
					max: 1,
					time: 1000 * 60 * 15
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "üí£") {
						message.channel.send(clanBombEmbedToAttackDefuse);
						bot.channels.cache.find(ch => ch.id == reclanData.chatID).send(clanBombEmbedDefused);
						await reclanModel.updateOne({
							clanID: attackedData.clanID
						}, {
							$set: {
								underAttack: 0
							},
							$inc: {
								balance: 1000,
								prize: 2,
							}
						});
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async err => {
					message.channel.send(clanBombAttackToEmbedNotdefused);
					bot.channels.cache.find(ch => ch.id == reclanData.chatID).send(clanBombEmbedNotdefused);
					await reclanModel.updateOne({
						clanID: attackedData.clanID
					}, {
						$set: {
							underAttack: 0
						},
						$inc: {
							balance: -attackToWillLost,
						}
					});
					await reclanModel.updateOne({
						clanID: userClan
					}, {
						$inc: {
							balance: attackToWillLost,
							prize: 6,
						}
					});
					return;
				});
		} else if (args[0] == "rob") {
			//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–ª–∞–Ω–µ
			if (userClan == -1) return message.channel.send(youAreNotInClan);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≤–Ω–µ—Ä–æ–º –∏–ª–∏ –æ—Ñ–∏—Ü–µ—Ä–æ–º
			if (!(message.member.roles.cache.has(config.clanLeaderRole) || message.member.roles.cache.has(config.clanOfficerRole))) return message.channel.send(noPermissions);
			if (reclanData.balance < robPrice) return message.channel.send(noClanBalance);
			let attackToID = args[1];
			if (!attackToID) return message.channel.send(youForgotToSpecifyID);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –∞—Ç–∞–∫—É—é—Ç
			attackedData = await reclanModel.findOne({
				name: attackToID
			});
			let thisClanDoesntExist = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–¢–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			if (!attackedData) return message.channel.send(thisClanDoesntExist);
			//–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–ª–∞–Ω —Ç–µ–º –∂–µ, —á—Ç–æ –∏ –∞—Ç–∞–∫–∫—É—é—Ç
			if (attackedData.clanID == reclanData.clanID) return message.channel.send(youCantAttackYourClan);
			let timeOut = (robCooldown - (Date.now() - reclanData.lastRob));
			const seconds = Math.floor((timeOut / 1000) % 60);
			const minutes = Math.floor((timeOut / 1000 / 60) % 60);
			const hours = Math.floor((timeOut / 1000 / 60 / 60) % 24);

			let robOnCooldown = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–í—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø—è—Ç—å –æ–≥—Ä–∞–±–∏—Ç—å –∫–æ–≥–æ-—Ç–æ —á–µ—Ä–µ–∑: **${hours}—á. ${minutes}–º. ${seconds}—Å.**`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			if (Date.now() < (reclanData.lastRob + robCooldown)) return message.channel.send(bombOnCooldown);

			let attackToMembersNumber = attackedData.members.length + attackedData.officers.length;
			let membersNeeded = Math.floor(attackToMembersNumber / 100 * 60) + 1;
			let clanColor = message.guild.roles.cache.get(attackedData.roleID).color;
			let attackToWillLost = Math.floor(attackedData.balance / 100 * 4);

			let clanRobEmbed = new Discord.MessageEmbed()
				.setColor(clanColor)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –í–∞—Å –∞—Ç–∞–∫—É—é—Ç!‚óû")
				.setDescription(`‚ùï –í–Ω–∏–º–∞–Ω–∏–µ! –ö–ª–∞–Ω <@&${reclanData.roleID}> —Ç–∞–π–Ω–æ –ø—Ä–æ–Ω–∏–∫ –≤ –≤–∞—à–µ —É–±–µ–∂–∏—â–µ –∏ –ø—ã—Ç–∞–µ—Ç—Å—è —É–∫—Ä–∞—Å—Ç—å —É –≤–∞—Å –¥–µ–Ω—å–≥–∏. –†–∞–∑–≤–µ—Ç—á–∏–∫ –∞—Ç–∞–∫—É—é—â–µ–≥–æ –∫–ª–∞–Ω–∞ —É–±–µ–∂–∏—Ç —Å –¥–µ–Ω—å–≥–∞–º–∏ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç!\n\n–£ –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ–≥–æ **10 –º–∏–Ω—É—Ç**, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ª–∞–∑—É—Ç—á–∏–∫–∞, –∏–Ω–∞—á–µ –≤–∞—à –∫–ª–∞–Ω **–ø–æ—Ç–µ—Ä—è–µ—Ç** ${attackToWillLost} ${config.silverCoin}\n\n` + '`' + `–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ª–∞–∑—É—Ç—á–∏–∫–∞ - 60% (${membersNeeded}) —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞ –¥–æ–ª–∂–Ω—ã –Ω–∞–∂–∞—Ç—å –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é üëÄ` + '`')
				.setTimestamp();

			let clanRobEmbedSuccessSend = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–Ω–∏–∫–ª–∏ –≤ —É–±–µ–∂–∏—â–µ –∫–ª–∞–Ω–∞ <@&${attackedData.roleID}> –∏ —Å—Ç–∞—Ä–∞–µ—Ç–µ—Å—å –ø—Ä–æ–π—Ç–∏ –∫ –∏—Ö —Å–µ–π—Ñ—É!\n–¢–µ–ø–µ—Ä—å —É –∫–ª–∞–Ω–∞ –µ—Å—Ç—å –≤—Å–µ–≥–æ **10 –º–∏–Ω—É—Ç**, —á—Ç–æ–±—ã –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –≤–∞—Å.\n\n–ï—Å–ª–∏ –í–∞—Å –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∞—Ç, —Ç–æ –≤–∞—à –∫–ª–∞–Ω –ø–æ–ª—É—á–∏—Ç ${attackToWillLost} ${config.silverCoin}`)
				.setTimestamp();

			let clanRobEmbedToAttackDefuse = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!‚óû")
				.setDescription(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –∏ –Ω–∞–∫–∞–∑–∞–ª–∏ —Ä–∞–∑–≤–µ—Ç—á–∏–∫–∞ –∫–ª–∞–Ω–∞ <@&${reclanData.roleID}> –∏ —Å–º–æ–≥–ª–∏ –∑–∞—â–∏—Ç–∏—Ç—å —Å–≤–æ–∏ ${attackToWillLost} ${config.silverCoin}, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏–ª–∏ 500 ${config.silverCoin} –Ω–∞ —Å—á—ë—Ç —Å–≤–æ–µ–≥–æ –∫–ª–∞–Ω–∞ –∏ 1 —Ç—Ä–æ—Ñ–µ–π üèÜ!`)
				.setTimestamp();

			let clanRobAttackToEmbedNotdefused = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö üèÉ‚Äç‚ôÇÔ∏èüí®üí®üí®‚óû")
				.setDescription(`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –∫–ª–∞–Ω –Ω–µ —É—Å–ø–µ–ª –Ω–∞–π—Ç–∏ —Ä–∞–∑–≤–µ—Ç—á–∏–∫–∞ –∫–ª–∞–Ω–∞ <@&${reclanData.roleID}> –∏ –ø–æ—Ç–µ—Ä—è–ª ${attackToWillLost} ${config.silverCoin} —Å–æ —Å–≤–æ–µ–≥–æ —Å—á—ë—Ç–∞.`)
				.setTimestamp();

			let clanRobEmbedNotdefused = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–ö–ª–∞–Ω <@&${attackedData.roleID}> –Ω–µ —É—Å–ø–µ–ª –ø–æ–π–º–∞—Ç—å –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤–µ—Ç—á–∏–∫–∞ –∑–∞ 10 –º–∏–Ω—É—Ç –∏ –æ–Ω —Å–º–æ–≥ —É–±–µ–∂–∞—Ç—å!\n\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${attackToWillLost} ${config.silverCoin} —Å –∏—Ö —Å—á—ë—Ç–∞ –∏ 3 —Ç—Ä–æ—Ñ–µ—è üèÜ!`)
				.setTimestamp();

			let clanRobEmbedDefused = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`–ö–ª–∞–Ω <@&${attackedData.roleID}> —É—Å–ø–µ–ª –Ω–∞–π—Ç–∏ –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤–µ—Ç—á–∏–∫–∞ –∑–∞ 10 –º–∏–Ω—É—Ç!\n\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${robPrice} ${config.silverCoin}.`)
				.setTimestamp();

			await reclanModel.updateOne({
				clanID: userClan
			}, {
				$inc: {
					balance: -robPrice,
				},
				$set: {
					lastRob: Date.now()
				}
			});

			await reclanModel.updateOne({
				clanID: attackedData.clanID
			}, {
				$set: {
					underAttack: 1
				}
			});

			message.channel.send(clanRobEmbedSuccessSend);

			const msg = await bot.channels.cache.find(ch => ch.id == attackToChat).send(`<@&${attackedData.roleID}>`, clanRobEmbed);
			await msg.react("üëÄ");
			await msg.awaitReactions((reaction, user) => reaction.count >= (membersNeeded + 1) && (reaction.emoji.name == "üëÄ"), {
					max: 1,
					time: 1000 * 60 * 10
				})
				.then(async collected => {
					msg.reactions.removeAll();

					if (collected.first().emoji.name == "üëÄ") {
						message.channel.send(clanRobEmbedToAttackDefuse);
						bot.channels.cache.find(ch => ch.id == reclanData.chatID).send(clanRobEmbedDefused);
						await reclanModel.updateOne({
							clanID: attackedData.clanID
						}, {
							$set: {
								underAttack: 0
							},
							$inc: {
								balance: 500,
								prize: 1
							}
						});
						return;
					} else {
						return console.log("–û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏");
					}
				}).catch(async err => {
					message.channel.send(clanRobAttackToEmbedNotdefused);
					await reclanModel.updateOne({
						clanID: attackedData.clanID
					}, {
						$set: {
							underAttack: 0
						},
						$inc: {
							balance: -attackToWillLost,
						}
					});
					await reclanModel.updateOne({
						clanID: reclanData.clanID
					}, {
						$inc: {
							balance: attackToWillLost,
							prize: 3
						}
					});
					bot.channels.cache.find(ch => ch.id == reclanData.chatID).send(clanRobEmbedNotdefused);
					return;
				});
		} else if (args[0] == "top") {
			results = await reclanModel.find({}).sort({
				prize: -1
			}).limit(5);

			var lbString = "";
			var lbPos = 1;
			var lbEmoji = "";

			for (let i = 0; i < results.length; i++) {
				const {
					roleID,
					prize = 0
				} = results[i];

				switch (lbPos) {
					case 1:
						lbEmoji = "ü•á"
						break;
					case 2:
						lbEmoji = "ü•à"
						break;
					case 3:
						lbEmoji = "ü•â"
						break;
					default:
						lbEmoji = ""
						break;
				}
				if (lbPos <= 3) {
					lbString += lbEmoji + ` <@&${roleID}>\n–¢—Ä–æ—Ñ–µ–µ–≤: ` + prize + ` üèÜ\n\n`;
				} else {
					lbString += lbPos + `. ` + ` <@&${roleID}>\n–¢—Ä–æ—Ñ–µ–µ–≤: ` + prize + ` üèÜ\n\n`;
				}
				lbPos++;
			}
			var lbEmbed = new Discord.MessageEmbed()
				.setColor(config.defaultColor)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –¢–æ–ø –∫–ª–∞–Ω–æ–≤‚óû")
				.setDescription("```–¢–æ–ø 5 —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç—Ä–æ—Ñ–µ–µ–≤:```\n" + lbString)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();
			message.channel.send(lbEmbed);
		} else if (args[0] == "help") {
			let clanHelpEmbed = new Discord.MessageEmbed()
				.setColor(`${config.defaultColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω—ã‚óû")
				.setDescription(`**.reclan** - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞–Ω–µ\n**.reclan help** - –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n**.reclan create <–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞>** - —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω –∑–∞ ${clanPrice} ${config.silverCoin}\n**.reclan delete** - —É–¥–∞–ª–∏—Ç—å –∫–ª–∞–Ω\n**.reclan invite <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>** - –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–ª–∞–Ω\n**.reclan kick <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>** - –≤—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–ª–∞–Ω–∞\n**.reclan leave** - –ø–æ–∫–∏–Ω—É—Ç—å –∫–ª–∞–Ω\n**.reclan officer <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>** - –Ω–∞–∑–Ω–∞—á–∏—Ç—å/—É–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞/—Å –¥–æ–ª–∂–Ω–æ—Å—Ç—å(-–∏) –æ—Ñ–∏—Ü–µ—Ä(-–∞)\n**.reclan deposit <1-15000>** - –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç –∫–ª–∞–Ω–∞\n**.reclan color <hex>** - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–≤–µ—Ç –∫–ª–∞–Ω–∞ –∑–∞ ${colorPrice} ${config.silverCoin}\n**.reclan symbol <emoji>** - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏–º–≤–æ–ª(—ã) –∫–ª–∞–Ω–∞ –∑–∞ ${symbolPrice} ${config.silverCoin}\n**.reclan description <–æ–ø–∏—Å–∞–Ω–∏–µ>** - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ –∑–∞ ${descriptionPrice} ${config.silverCoin}\n**.reclan banner <—Å—Å—ã–ª–∫–∞>** - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–Ω–Ω–µ—Ä –∫–ª–∞–Ω–∞ –∑–∞ ${bannerPrice} ${config.silverCoin}\n**.reclan rename <–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞>** - –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–ª–∞–Ω –∑–∞ ${renamePrice} ${config.silverCoin}\n**.reclan perks** - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –∫–ª–∞–Ω–∞ –∏ –∏—Ö —Ü–µ–Ω—ã\n**.reclan upgrade <–∏–Ω–¥–µ–∫—Å>** - —É–ª—É—á—à–∏—Ç—å –∫–ª–∞–Ω\n**.reclan bomb <–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞>** - –∑–∞–ª–æ–∂–∏—Ç—å –±–æ–º–±—É –≤ –∫–ª–∞–Ω–µ\n**.reclan rob <–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞>** - –æ–≥—Ä–∞–±–∏—Ç—å –∫–ª–∞–Ω\n**.reclan top** - —Ç–æ–ø –∫–ª–∞–Ω–æ–≤`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			message.channel.send(clanHelpEmbed);
		} else {
			let clanName = args.slice(0).join(' ');

			reclanData = await reclanModel.findOne({
				name: clanName,
			})

			let clanNotExist = new Discord.MessageEmbed()
				.setColor(`${config.errColor}`)
				.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
				.setDescription(`–ö–ª–∞–Ω–∞ '${clanName}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, —á—Ç–æ –í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.`)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setTimestamp();

			if (!reclanData) return message.channel.send(clanNotExist)



			let clanColor = message.guild.roles.cache.get(reclanData.roleID).color;

			let dateStamp = new Date(reclanData.creationDate),
				createDate = [dateStamp.getDate(),
					dateStamp.getMonth() + 1,
					dateStamp.getFullYear()
				].join('/') + ' ' + [dateStamp.getHours(),
					dateStamp.getMinutes()
				].join(':');

			let memberAmount = reclanData.members.length + reclanData.officers.length;

			let membersDividedTwo = 1;
			if (Math.floor(memberAmount / 2) > 0) {
				clanxpmult = Math.floor(memberAmount / 2);
			}

			let membersField = "–ù–µ—Ç";
			if (reclanData.members.length > 0) {
				membersField = "";
				reclanData.members.slice(-7).forEach(async user => {
					membersField += `<@${user.memberID}>\n`
				})
				if ((reclanData.members.length - 7) > 0) {
					membersField += `–ò ${reclanData.members.length-7} –µ—â—ë...`
				}
			}

			let officersField = "–ù–µ—Ç";
			if (reclanData.officers.length > 0) {
				officersField = "";
				reclanData.officers.slice(-7).forEach(async user => {
					officersField += `<@${user.memberID}>\n`
				})
				if ((reclanData.officers.length - 7) > 0) {
					officersField += `–ò ${reclanData.officers.length-7} –µ—â—ë...`
				}
			}

			let isBanner = "–î–∞";
			if (reclanData.bannerLink == "" || reclanData.bannerLink == " " || reclanData.bannerLink == null) {
				isBanner = "–ù–µ—Ç";
			}

			let coinBoost = reclanData.coinMultiply;
			let lvlBoost = reclanData.lvlMultiply;
			let clanXPNeed = xplvlmult * reclanData.level * membersDividedTwo;

			var clanDataEmbed = new Discord.MessageEmbed()
				.setColor(clanColor)
				.setFooter(`${author.username}`, `${author.displayAvatarURL({dynamic: true})}`)
				.setDescription(`**‚∏ù‚∏ù ‚ô°‚ÇäÀö –ö–ª–∞–Ω : <@&${reclanData.roleID}> ${reclanData.symbols}‚óû**\n${reclanData.description}`)
				.addField(`üë§ –í –∫–ª–∞–Ω–µ`, '```' + `${memberAmount}/${reclanData.slots}` + '```', inline = true)
				.addField(`üèÜ –¢—Ä–æ—Ñ–µ–∏`, '```' + `${reclanData.prize}` + '```', inlite = true)
				.addField(`üìÜ –î–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è`, '```' + `${reclanData.creationDate}` + '```', inline = true)
				.addField(`üåü –£—Ä–æ–≤–µ–Ω—å`, '```' + `${reclanData.level}` + '```', inline = true)
				.addField(`‚≠ê –û–ø—ã—Ç`, '```' + `${reclanData.xp}/${clanXPNeed}` + '```', inline = true)
				.addField(`${config.silverCoin} –ë–∞–ª–∞–Ω—Å`, '```' + `${reclanData.balance}` + '```', inlite = true)
				.addField(`‚òÑÔ∏è –ë—É—Å—Ç —Å–µ—Ä–µ–±—Ä–∞`, '```' + `x${reclanData.coinMultiply}` + '```', inlite = true)
				.addField(`üé¥ –ë–∞–Ω–Ω–µ—Ä`, '```' + `${isBanner}` + '```', inlite = true)
				.addField(`üîÆ –ë—É—Å—Ç —É—Ä–æ–≤–Ω—è`, '```' + `x${reclanData.lvlMultiply}` + '```', inlite = true)
				.addField(`‡≠®‡≠ß „Éª –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å:`, `<@${reclanData.ownerID}>`, inline = true)
				.addField(`‡≠®‡≠ß „Éª –û—Ñ–∏—Ü–µ—Ä—ã:`, `${officersField}`, inline = true)
				.addField(`‡≠®‡≠ß „Éª –£—á–∞—Å—Ç–Ω–∏–∫–∏:`, `${membersField}`, inline = true)
				.setTimestamp();

			if (!(reclanData.bannerLink == "" || reclanData.bannerLink == " " || reclanData.bannerLink == null)) {
				clanDataEmbed.setImage(reclanData.bannerLink);
			}

			message.channel.send(clanDataEmbed);
		}
	} catch (err) {
		if (err.name === "ReferenceError")
			console.log("–£ –≤–∞—Å –æ—à–∏–±–∫–∞")
		console.log(`1.${err.name}\n2.${err.message}\n3.${err.stack}`);
	}
};

module.exports.help = {
	name: "clan"
};